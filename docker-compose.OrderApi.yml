version: "3.2"

networks:
  frontend:
  backend:


services:


  cart:
    image: cartimage
    build: 
      context: .\src\Services\CartApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - IdentityUrl=http://tokenserver
    container_name: cartapi
    ports:
      - "5500:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - basket.data
      - tokenserver 

  catalog:
    build: 
      context: .\src\Services\ProductCatalogApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - DatabaseServer=mssqlserver
      - DatabaseName=CatalogDb
      - DatabaseUser=sa
      - DatabaseUserPassword=ProductApi(!)
    container_name: catalogapi
    ports:
      - "5100:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver





  order.server:
    container_name: ${MYSQL_SERVER_NAME}
    image: mysql/mysql-server:5.7
    restart: always
    volumes:
      - odata:/var/lib/mysql
    ports:
      - "3406:3306"  
        
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: !!str yes
         
    env_file:
      - secrets.env  
    networks:
      - backend

  tokenserver:
    build: 
      context: .\src\Services\TokenServiceApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - MvcClient=http://localhost:5200   
      - BasketApiClient=http://localhost:5500
      - OrderApiClient=http://localhost:5600
    container_name: tokenserviceapi
    ports:
      - "5000:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver

  
  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    container_name: mssqldata
    ports:
      - "1445:1433" 
    networks:
      - backend
    environment:
      - SA_PASSWORD=ProductApi(!)
      - ACCEPT_EULA="Y"
   
  basket.data:
    image: redis
    ports:
      - "6377:6379"  
    networks:
      - backend 

volumes:
  odata:
   